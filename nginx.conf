
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    lua_shared_dict cookies 10m;
    lua_shared_dict tokens 10m;


    init_by_lua_file /opt/nginx2/conf/lua/json.lua;


    server {
        listen       80;
        server_name  localhost;
	set $login_url "http://nsp.nsp.ricoh.co.jp/auth/login";

	set $redirect_url "http://nsp.nsp.ricoh.co.jp/auth/login";
	set $auth_cookie "iPlanetDirectoryPro";
	set $device_header "X-Device-Id";
	set $auth_cache_time 60;
	set $permission_cache_time 60;

	set $debug "true";
	set $organization_id "";
	set $user_id "";
	set $last_name "";
	set $first_name "";
	set $locale "";
	set $timezone "";
	set $mail "";
	set $role "";
	set $uuid "";

	location /scanp {
	    proxy_pass http://localhost:3002;
	    proxy_redirect default;
	    proxy_set_header X-Organization-Id $organization_id;
	    proxy_set_header X-User-Id $user_id;
	    proxy_set_header X-User-Last-Name $last_name;
	    proxy_set_header X-User-First-Name $first_name;
	    proxy_set_header X-Locale $locale;
	    proxy_set_header X-Timezone $timezone;
	    proxy_set_header X-Mail $mail;
	    proxy_set_header X-Role $role;
	    proxy_set_header X-UUID $uuid;

	    set_by_lua $app "
	        ngx.ctx.authenticate = true
		ngx.ctx.service_class = 'scancx'
		ngx.ctx.service_rank = 'basic'
		ngx.ctx.serial_check = true
		return 'scancx'
	    ";
	    access_by_lua_file /opt/nginx2/conf/lua/auth_agent.lua;
	}

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

	location /hellolua {
            default_type 'text/plain';
            content_by_lua "ngx.say('Hello, Lua!!')";		 
	}

	location /log {
            default_type 'text/plain';
	    header_filter_by_lua "
	        ngx.header['X-Organization-Id'] = 'Lua Company'
	    ";

            content_by_lua "
	        ngx.say('Hello, Log!!')
		ngx.log(ngx.STDERR, 'Hello')
		print('Hello: Print')
	    ";
	    log_by_lua "
		ngx.log(ngx.INFO, 'Hello')
	    ";		 

	}

	location /private {
            default_type 'text/plain';

	    access_by_lua_file /opt/nginx2/conf/lua/auth_required.lua;
	    content_by_lua '
	        ngx.say("OK! You have token!")
	    ';
	}
	
        location / {
            root   html;
            index  index.html index.htm;
        }

	location /auth {
	    proxy_pass http://nsp.nsp.ricoh.co.jp:3000/;
	    proxy_redirect default;
	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
